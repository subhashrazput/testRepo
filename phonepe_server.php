<?php
require "http.php";

class PhonePeServer{

    private $credentials;
    public function __construct($credentials) {
      $this->credentials = $credentials;
    } 

    function fetch_auth_token($grant_token){
        $body = array(
            "grantToken" => $grant_token
        );
        //echo $this->credentials->client_id; die;
        $encoded_request = base64_encode(json_encode($body));
        $salt_key = $this->credentials->salt_key;
        $salt_index = $this->credentials->salt_index;
        $_sha256 =hash("sha256", "$encoded_request/v3/service/auth/access$salt_key"); 
        $header = array(
            "content-type: application/json",
            "x-client-id: {$this->credentials->client_id}",
            "x-verify: $_sha256###$salt_index"
          );
        $curl = curl_init();
        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://apps-uat.phonepe.com/v3/service/auth/access",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_POSTFIELDS => json_encode(array('request' => $encoded_request)),
          CURLOPT_HTTPHEADER => $header));
        $response = curl_exec($curl);
        $httpcode = curl_getinfo($curl, CURLINFO_HTTP_CODE);
        $resArr = json_decode($response,true);
        $err = curl_error($curl);
        curl_close($curl);        
        if($httpcode != 200)
        {
                return $resArr['error_code'] = $httpcode;
        }
        else
        {
            if(!empty($resArr['code']) && $resArr['code'] == 'SUCCESS' && !empty($resArr['data']['accessToken']))
            {
                return $resArr['data']['accessToken'] ;
            }
            else
            {
                $resArr['error_code'] = $resArr['code'];
                return $resArr;
            }
        }

    }


    function get_user_info($access_token){
        $salt_key = $this->credentials->salt_key;
        $salt_index = $this->credentials->salt_index;
        $_sha256 = hash("sha256", "/v3/service/userdetails$salt_key");
        $headers = array("content-type: application/json","x-access-token: $access_token","x-client-id: {$this->credentials->client_id}","x-verify: $_sha256###$salt_index");        
        $curl = curl_init();
        curl_setopt_array($curl, array(
          CURLOPT_URL => "https://apps-uat.phonepe.com/v3/service/userdetailssssss",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "GET",
          CURLOPT_HTTPHEADER => $headers
        ));
        $response = curl_exec($curl);
        $httpcode = curl_getinfo($curl, CURLINFO_HTTP_CODE);
        $resArr = json_decode($response,true);
        $err = curl_error($curl);
        if($httpcode != 200)
        {
                return $resArr['error_code'] = $httpcode;
        }
        else
        {
            if(!empty($resArr['code']) && $resArr['code'] == 'SUCCESS' && !empty($resArr['data']) && (!empty($resArr['data']['phoneNumber']) || !empty($resArr['data']['primaryEmail'])))
            {
                return $resArr['data'];
            }
            else
            {
                $resArr['error_code'] = $resArr['code'];
                return $resArr;
            }
        }
    }

    function initiate_transaction_sdk_less($call_back_url, $transaction_id, $amount, $valid_for, $merchant_order_id, $transaction_context){
        /**
        :param call_back_url: As soon as user completes the transaction on PhonePe Switch, user will be redirected to this redirection URL
        :param transaction_id: Unique TransactionID generated by the merchant to track request to PhonePe transactionId length should be less than 38 characters.
        :param amount: Transaction amount in Paise
        :param valid_for: Time in Miliseconds for which the payment is valid
        :param merchant_order_id: generated by the merchant merchantOrderId length should be less than 48 characters
        :param transaction_context: Base 64 encoded of the cart details pertaining to the category
        :return: {
            success: "Boolean",
            "code": "ENUM",
            "data": "String"
        }
        More Details: https://developer.phonepe.com/v4/reference#initiate-transaction-sdk-less-api
        **/
        $url = "https://apps-uat.phonepe.com/v3/transaction/sdk-less/initiate";
        $body = array(
            "merchantId" => $this->credentials.mid,
            "amount" => $amount,
            "validFor" => $valid_for,
            "transactionId" => $transaction_id,
            "merchantOrderId" => $merchant_order_id,
            "redirectUrl" => $call_back_url,
            "transactionContext" => base64_encode(json_encode($transaction_context))
        );
        $encoded_request = base64_encode(json_encode($body));
        $salt_key = $this->credentials.salt_key;
        $salt_index = $this->credentials.salt_index;
        $_sha256 =hash("sha256", "$encoded_request/v3/transaction/sdk-less/initiate$salt_key");
        $request = new HttpRequest();
        $request->setUrl($url);
        $request->setMethod(HTTP_METH_POST);
        $request->setHeaders(array(
            "x-verify" => "$_sha256###$salt_index",
            "x-client-id" => $this->credentials.client_id,
            "Content-Type" => 'application/json'
        ));
        $request->setBody('{
            "request": $encoded_request
        }');

        try {
            $response = $request->send();
            return $response->getBody();
        } catch (Exception $ex) {
            return $ex;
        }

    }


    function initiate_transaction($call_back_url, $transaction_id, $amount, $valid_for, $merchant_order_id, $transaction_context){
        /**
        :param call_back_url: As soon as user completes the transaction on PhonePe Switch, user will be redirected to this redirection URL
        :param transaction_id: Unique TransactionID generated by the merchant to track request to PhonePe transactionId length should be less than 38 characters.
        :param amount: Transaction amount in Paise
        :param valid_for: Time in Miliseconds for which the payment is valid
        :param merchant_order_id: generated by the merchant merchantOrderId length should be less than 48 characters
        :param transaction_context: Base 64 encoded of the cart details pertaining to the category
        :return: {
            success: "Boolean",
            "code": "ENUM",
            "data": "String"
        }
        More Details: https://developer.phonepe.com/v4/reference#initiate-transaction-request
        **/
        $url = "https://apps-uat.phonepe.com/v3/transaction/initiate";
        $body = array(
            "merchantId" => $this->credentials.mid,
            "amount" => $amount,
            "validFor" => $valid_for,
            "transactionId" => $transaction_id,
            "merchantOrderId" => $merchant_order_id,
            "redirectUrl" => $call_back_url,
            "transactionContext" => base64_encode(json_encode($transaction_context))
        );
        $encoded_request = base64_encode(json_encode($body));
        $salt_key = $this->credentials.salt_key;
        $salt_index = $this->credentials.salt_index;
        $_sha256 =hash("sha256", "$encoded_request/v3/transaction/initiate$salt_key");
        $request = new HttpRequest();
        $request->setUrl($url);
        $request->setMethod(HTTP_METH_POST);
        $request->setHeaders(array(
            "x-verify" => "$_sha256###$salt_index",
            "x-client-id" => $this->credentials.client_id,
            "Content-Type" => 'application/json'
        ));
        $request->setBody('{
            "request": $encoded_request
        }');

        try {
            $response = $request->send();
            return $response->getBody();
        } catch (Exception $ex) {
            return $ex;
        }

    }

    function get_transaction_status($transaction_id){
        /**
        :param transaction_id:
        :return: dict
        **/
        $mid = $this->credentials.mid;
        $url = "https://apps-uat.phonepe.com/v3/transaction/$mid/$transaction_id/status";
        $salt_key = $this->credentials.salt_key;
        $salt_index = $this->credentials.salt_index;
        $_sha256 =hash("sha256", "/v3/transaction/$mid/$transaction_id/status$salt_key");
        $request = new HttpRequest();
        $request->setUrl($url);
        $request->setMethod(HTTP_METH_GET);
        $request->setHeaders(array(
            "x-verify" => "$_sha256###$salt_index",
            "x-client-id" => $this->credentials.client_id,
            "Content-Type" => 'application/json',
        ));
        try {
            $response = $request->send();
            return $response->getBody();
        } catch (Exception $ex) {
            return $ex;
        }
    }

    function back_to_source($provided_reference_id, $transaction_id, $merchant_order_id, $amount, $message){
        /**
        :param provided_reference_id: PhonePe transaction id of the original forward payment.
        Note : use only one of originalTransactionId, providerReferenceId only
        :param transaction_id:
        :param merchant_order_id:
        :param amount: Reversal amount in paise. Upto a max of amount of original payment transaction
        :param message: Short message
        :return: dict
        More Info: https://developer.phonepe.com/v4/reference#refund
        **/

        $url = "https://apps-uat.phonepe.com/v3/credit/backToSource";
        $body = array(
            "merchantId" => $this->credentials.mid,
            "amount" => $amount,
            "transactionId" => $transaction_id,
            "merchantOrderId" => $merchant_order_id,
            "message" => $message,
            "providerReferenceId" => $provided_reference_id
        );
        $encoded_request = base64_encode(json_encode($body));
        $salt_key = $this->credentials.salt_key;
        $salt_index = $this->credentials.salt_index;
        $_sha256 =hash("sha256", "$encoded_request/v3/credit/backToSource$salt_key");
        $request = new HttpRequest();
        $request->setUrl($url);
        $request->setMethod(HTTP_METH_POST);
        $request->setHeaders(array(
            "x-verify" => "$_sha256###$salt_index",
            "x-client-id" => $this->credentials.client_id,
            "Content-Type" => 'application/json'
        ));
        $request->setBody('{
            "request": $encoded_request
        }');

        try {
            $response = $request->send();
            return $response->getBody();
        } catch (Exception $ex) {
            return $ex;
        }
    }

    function s2s_callback($x_verify, $phonepe_response){
        /**
        :param x_verify:
        :param phonepe_response:
        :return: dict
        More Info: https://developer.phonepe.com/v4/reference#s2s-call-back-1
        **/
        $salt_key = $this->credentials.salt_key;
        $_sha256 = hash("sha256", "$phonepe_response$salt_key");
        $salt_index = $this->credentials.salt_index;
        if($x_verify != "$_sha256###$salt_index"){

        }
        return base64_decode($phonepe_response);
    }


}